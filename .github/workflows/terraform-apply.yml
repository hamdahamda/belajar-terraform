name: Terraform Apply (Multi Folder) # ðŸ”„ UPDATE

on:
  workflow_dispatch:
    inputs: # ðŸ†• NEW: Pilih folder Terraform dari GitHub UI
      target_folder:
        description: "Folder Terraform yang ingin dijalankan"
        required: true
        default: "Choose a folder"
        type: choice
        options:
          - 8. CI-CD Terraform
          - 9. GCS Terraform

jobs:
  terraform:
    name: Terraform Manual Apply
    runs-on: ubuntu-latest

    env: # ðŸ”„ Tetap sama, tapi pastikan secrets benar
      GOOGLE_CREDENTIALS: ${{ secrets.GCP_CREDENTIALS_GCS }}          # ðŸ”„ GCS backend credentials
      TF_VAR_google_credentials_json: ${{ secrets.GCP_CREDENTIALS }}  # ðŸ”„ Provider credentials
      # GOOGLE_APPLICATION_CREDENTIALS: creds.json                      # ðŸ†• NEW: digunakan oleh GCP SDK
      TF_VAR_project_id: sodium-pattern-465207-m9
      TF_VAR_region: us-central1
      TF_VAR_zone: us-central1-a

    steps:
      - name: ðŸ§¾ Checkout Repo
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.0  # âœ… Wajib ada ini

      - name: ðŸ§ª Terraform Init
        run: terraform init
        working-directory: ${{ github.event.inputs.target_folder }} # ðŸ”„ UPDATE

      - name: âœ… Terraform Validate
        run: terraform validate
        working-directory: ${{ github.event.inputs.target_folder }} # ðŸ”„ UPDATE

      - name: ðŸ“¦ Terraform Plan
        run: terraform plan -out=tfplan.out -lock=false
        working-directory: ${{ github.event.inputs.target_folder }} # ðŸ”„ UPDATE

      - name: ðŸš€ Terraform Apply
        run: terraform apply -auto-approve tfplan.out
        working-directory: ${{ github.event.inputs.target_folder }} # ðŸ”„ UPDATE
