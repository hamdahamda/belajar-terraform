name: Terraform Apply (Multi Folder)

on:
  workflow_dispatch:
    inputs: # Pilih folder Terraform dari GitHub UI
      target_folder:
        description: "Folder Terraform yang ingin dijalankan"
        required: true
        default: "Choose a folder"
        type: choice
        options:
          # - 8. CI-CD Terraform
          - 9. Cloud Run from Source Repo

jobs:
  terraform:
    name: Terraform Manual Apply
    runs-on: ubuntu-latest

    env: 
      GOOGLE_CREDENTIALS: ${{ secrets.GCP_CREDENTIALS_GCS }}          # ðŸ”„ GCS,coud-run credentials
      TF_VAR_google_credentials_json: ${{ secrets.GCP_CREDENTIALS_GCS }}  # ðŸ”„ Provider credentials
      # TF_VAR_google_credentials_json: ${{ secrets.GCP_CREDENTIALS }}  # ðŸ”„ Provider credentials
      TF_VAR_project_id: ${{ secrets.GCP_PROJECT_ID }}                 # âœ… Project ID
      TF_VAR_region: ${{ secrets.GCP_REGION }}                         # âœ… Region
      TF_VAR_zone: ${{ secrets.GCP_ZONE }}                             # âœ… Zone
      TF_VAR_service_name: "flask-cloudrun-testing"                    # âœ… service name
      TF_VAR_image_url: "gcr.io/cloudrun/hello"                        # âœ… image URL

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.0 

      - name: ðŸ§ª Terraform Init
        run: terraform init
        working-directory: ${{ github.event.inputs.target_folder }} 

      - name: âœ… Terraform Validate
        run: terraform validate
        working-directory: ${{ github.event.inputs.target_folder }} 

      - name: ðŸ“¦ Terraform Plan
        run: terraform plan -out=tfplan.out -lock=false
        working-directory: ${{ github.event.inputs.target_folder }} 

      - name: ðŸš€ Terraform Apply
        run: terraform apply -auto-approve tfplan.out
        working-directory: ${{ github.event.inputs.target_folder }} 
